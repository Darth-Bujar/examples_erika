#ifndef _CAN_CONTROL_H_
#define _CAN_CONTROL_H_

#include "IfxCan.h"
/*********************************************************************************************************************/
/*-------------------------------------------------Macro definition--------------------------------------------------*/
/*********************************************************************************************************************/
#define MAXIMUM_RX_CAN_FD_DATA_PAYLOAD         64               /* Define maximum CAN payload in bytes               */
#define CAN_SW_BUFFER_SIZE         64                          /* Maximum number of messages stored in sw CAN buffer */
/*********************************************************************************************************************/
/*-------------------------------------------------Type definition---------------------------------------------------*/
/*********************************************************************************************************************/
typedef struct
{
    IfxCan_Message header;
    uint8 data[MAXIMUM_RX_CAN_FD_DATA_PAYLOAD];
}can_message

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
extern can_message can_sw_rx_buffer[CAN_SW_BUFFER_SIZE];  /* Declaration of the variable */
extern uin8 can_sw_rx_buffer_index;
/*********************************************************************************************************************/
/*-------------------------------------------------Function declaration----------------------------------------------*/
/*********************************************************************************************************************/
/* CAN module configuration and initialization:
 *  - load and initialize CAN module with default configuration
 */
void can_init(void);

void send_keep_alive_message(void);

#endif /* _CAN_CONTROL_H_ */